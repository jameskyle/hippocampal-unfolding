% script ipt2VolDat
%
% like data2Vol, supersamples volume anatomy pixels, and then 
% uses linear interpolation in the inplanes.
% 
% Using point sampling to map co, amp, and ph to volCo, volAmp,
% and volPh.  Writes them out in volCorAnal.mat

sampFactor = 3;  %supersampling factor 
sampList = [1:sampFactor]/sampFactor - 1/(2*sampFactor);

if ~exist('scanNum')
  scanNum=1;
end

% load corAnal
if ~exist('co')
  load CorAnal
end

load ExpParams
load anat
mrLoadAlignParams;
load bestrotvol

% 4x4 homogeneous tranform that tranforms from volume to inplane.
Xform = inv(inplane2VolXform(rot,trans,scaleFac));
Xform = Xform(1:3,:);

for hemnum = 1:2
  if hemnum ==1
    hemisphere = 'right';
  else
    hemisphere = 'left';
  end
  estr = ['load Fanat_',hemisphere];
  eval(estr);

  % unwrap the data for the chosen scan
  seriesNums=scanSlice2Series(scanNum,1:numofanats,numofexps,numofanats);
  subco=co(seriesNums,:)';
  subph=ph(seriesNums,:)';
  subamp=amp(seriesNums,:)';
  subco=subco(:);
  subph=subph(:);
  subamp=subamp(:);
  %threshPoints=subco<cothresh;
  %subco(threshPoints)=NaN*ones(sum(threshPoints),1);
  %subph(threshPoints)=NaN*ones(sum(threshPoints),1);
  %subamp(threshPoints)=NaN*ones(sum(threshPoints),1);
  
  %subsample volume anatomy voxels.
  
  realVolZ = zeros(size(gLocs3d,1),1);
  imagVolZ = zeros(size(gLocs3d,1),1);
  volCo = zeros(size(gLocs3d,1),1);
  
  coords=[gLocs3d(:,1:3)'; ones(1,size(gLocs3d,1))];
  for xs = sampList
    for ys = sampList
      for zs = sampList
	disp(sprintf('xs 		%5.2f, ys %5.2f, zs %5.2f\n',xs,ys,zs));
	% transform grayNode positions to inplanes
	inplaneCoords=Xform*coords; 	%look into this '-.5' business
	inplaneCoords(1,:)= inplaneCoords(1,:) - xs;
	inplaneCoords(2,:)= inplaneCoords(2,:) - ys;
	inplaneCoords(3,:)= inplaneCoords(3,:) - zs;
	
	%Trilinear interpolation here.
	%Calculate real and imaginary components of amp*exp(i*ph);
	realZ = subamp.*cos(subph);
	imagZ = subamp.*sin(subph);
	realVolZ = realVolZ + ...
	    myCinterp3(realZ,curSize,numofanats,inplaneCoords',NaN)';
	imagVolZ = imagVolZ + ...
	    myCinterp3(imagZ,curSize,numofanats,inplaneCoords',NaN)';
	volCo = volCo + ...
	    myCinterp3(subco,curSize,numofanats,inplaneCoords',NaN)';
      end 				%zs
    end 				%ys
  end 					%xs

  %divide by sampFactor.^3 to get average
  realVolZ = realVolZ/sampFactor.^3;
  imagVolZ = imagVolZ/sampFactor.^3;
  volCo = volCo/sampFactor.^3;
  
  volPh = atan2(imagVolZ,realVolZ);
  volPh(volPh<0) = volPh(volPh<0)+pi*2;
  volAmp = sqrt(realVolZ.^2 + imagVolZ.^2);
  
  goodpts = finite(volCo);      
  volCoords = gLocs3d(goodpts,:);
  volCo = volCo(goodpts);
  volPh = volPh(goodpts);
  volAmp = volAmp(goodpts);
end                                     %hemnum

save volCorAnal volCoords volCo volPh volAmp



